{"version":3,"sources":["Constant.js","reducers/fetchReducer.js","reducers/index.js","actions/types.js","store.js","actions/fetchActions.js","inputBox.js","Header.js","images.js","card.js","util.js","Body.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","page_size","domain","initialState","data","loading","page","search","error","totalResults","combineReducers","fetch","state","action","type","payload","articles","concat","loadFromLocalStorage","seralizedState","localStorage","getItem","console","log","JSON","parse","e","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","subscribe","getState","length","stringify","setItem","saveToLocalStorage","fetchAPI","dispatch","constant","then","response","json","status","catch","err","savedData","InputBox","this","props","document","getElementById","disabled","placeholder","className","id","onKeyPress","key","target","value","onChange","Component","connect","Header","images","Card","minWidth","window","innerWidth","map","row","i","style","onClick","open","toUpperCase","current","moment","add","offset","format","src","alt","Body","options","root","querySelector","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","href","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0f2343c9.chunk.js","sourcesContent":["\r\nconst APIKey = 'b5e5c8f361424ccab40c738aef523780'\r\nconst page_size = 10\r\nconst domain = `washingtonpost.com,nytimes.com`\r\n\r\n\r\n\r\nmodule.exports = {\r\n    APIKey: APIKey,\r\n    page_size: page_size,\r\n    domain: domain,\r\n    \r\n}","import { FETCH_API_PAGINATION, NEW_FETCH_API, API_ERROR, CLEAR_DATA, LOADING_API, LOAD_FROM_STORE } from '../actions/types'\r\n\r\nconst initialState = {\r\n    data: [],\r\n    loading: true,\r\n    page: 1,\r\n    search: '',\r\n    error: false,\r\n    totalResults: 9999\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    \r\n    switch(action.type){\r\n\r\n        //When performing search, clear articles, reset page to non-scrolled position.\r\n        case CLEAR_DATA:\r\n            return{\r\n                ...state,\r\n                data: [],\r\n                loading: true,\r\n                page: action.page,\r\n                search: action.search,\r\n                error: false,\r\n            }\r\n\r\n        case NEW_FETCH_API:\r\n            return{\r\n                ...state,\r\n                data: action.payload.articles,\r\n                loading: false,\r\n                page: action.page,\r\n                search: action.search,\r\n                error: false,\r\n                totalResults: action.payload.totalResults\r\n            }\r\n\r\n        //For pagination, concat existing articles with new ones\r\n        case FETCH_API_PAGINATION:\r\n            return{\r\n                ...state,\r\n                data: (state.data).concat(action.payload.articles),\r\n                loading: false,\r\n                page: action.page,\r\n                search: action.search,\r\n                error: false,\r\n                totalResults: action.payload.totalResults\r\n            }\r\n\r\n        case LOAD_FROM_STORE:\r\n        return{\r\n            ...state,\r\n            data: action.payload,\r\n            loading: false,\r\n            page: action.page,\r\n            search: action.search,\r\n            error: true,\r\n            totalResults: action.payload.totalResults\r\n        }\r\n        case LOADING_API:\r\n        return{\r\n            ...state,\r\n            loading: true\r\n        }\r\n\r\n        case API_ERROR:\r\n            return{\r\n                ...state,\r\n                error: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport fetchReducer from './fetchReducer'\r\n\r\nexport default combineReducers({\r\n    fetch: fetchReducer,\r\n})","export const FETCH_API = 'FETCH_API'\r\nexport const LOADING_API = 'LOADING_API'\r\nexport const API_ERROR = 'API_ERROR'\r\nexport const FETCH_API_PAGINATION = 'FETCH_API_PAGINATION'\r\nexport const NEW_FETCH_API = 'NEW_FETCH_API'\r\nexport const CLEAR_DATA = 'CLEAR_DATA'\r\nexport const LOAD_FROM_STORE = 'LOAD_FROM_STORE'\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nfunction saveToLocalStorage(state){\r\n    try{\r\n        const seralizedState = JSON.stringify(state)\r\n        localStorage.setItem(\"state\", seralizedState)\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function loadFromLocalStorage(){\r\n    try{\r\n        const seralizedState = localStorage.getItem(\"state\")\r\n        if (seralizedState === null) return undefined\r\n        console.log(JSON.parse(seralizedState))\r\n        return JSON.parse(seralizedState)\r\n    } catch(e){\r\n        console.log(e)\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\n//On successful API calls, save to localstorage\r\n//Do not save to state if no articles, on error or loading state\r\nstore.subscribe(() => {\r\n    let state = store.getState()\r\n    if (state.fetch.error || state.fetch.loading) {\r\n        //console.log(\"Error or loading. Do not save to store\")\r\n        return\r\n    }\r\n    try{\r\n        if (state.fetch[\"data\"].length >= 1){\r\n            saveToLocalStorage(state)\r\n        }\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n    \r\n\r\n})"," \r\nimport constant from '../Constant'\r\nimport { LOADING_API, NEW_FETCH_API, FETCH_API_PAGINATION, API_ERROR, CLEAR_DATA, LOAD_FROM_STORE } from './types'\r\nimport { loadFromLocalStorage } from '../store'\r\n\r\nexport const fetchAPI = (search = '', page = 1 ) => dispatch =>{\r\n\r\n    if (page === 1){\r\n        dispatch({\r\n            type: CLEAR_DATA,\r\n            loading: true,\r\n            payload: {},\r\n            page: page\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: LOADING_API,\r\n            loading: true,\r\n            page: page\r\n        })\r\n    }\r\n\r\n    fetch(`https://newsapi.org/v2/everything?`+\r\n            `domains=${constant.domain}` +\r\n            `&apiKey=${constant.APIKey}` +\r\n            `&pageSize=${constant.page_size}` +\r\n            `&page=${page}` +\r\n            `&q=${search}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n\r\n        if (data.status === \"error\"){\r\n            dispatch({\r\n                type: API_ERROR,\r\n                payload: data,\r\n                search: search,\r\n                page: page,\r\n                loading: false\r\n            })\r\n\r\n        } else if (page === 1){\r\n            dispatch({\r\n                type: NEW_FETCH_API,\r\n                payload: data,\r\n                search: search,\r\n                page: page,\r\n                loading: false\r\n            })\r\n        } else { \r\n            dispatch({\r\n                type: FETCH_API_PAGINATION,\r\n                payload: data,\r\n                search: search,\r\n                page: page,\r\n                loading: false\r\n            })\r\n        }\r\n    }).catch( err => {\r\n        //Error from server, load from local storage\r\n\r\n        console.log(err)\r\n        \r\n        let savedData = loadFromLocalStorage()\r\n        dispatch({\r\n            type: LOAD_FROM_STORE,\r\n            payload: savedData.fetch.data,\r\n            search: savedData.fetch.search,\r\n            page: savedData.fetch.page,\r\n            loading: false,\r\n            error: true\r\n        })\r\n      })\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { fetchAPI } from './actions/fetchActions'\r\n\r\nclass InputBox extends Component {\r\n\r\n    render() {\r\n      if (this.props.error){\r\n        document.getElementById(\"searchBox\").disabled = true\r\n        document.getElementById(\"searchBox\").placeholder = \"Search Unavailable\"\r\n      }\r\n      return (\r\n        <div className=\"control has-icons-left has-icons-right is-flex\">\r\n        <input className=\"input\" type=\"text\" placeholder=\"Search\" id=\"searchBox\"\r\n        \r\n        onKeyPress={(e) => {\r\n          //Search on enter press\r\n          if (e.key === \"Enter\" && !this.props.error){\r\n            this.props.fetchAPI(e.target.value, 1)\r\n          }}}\r\n        \r\n        //Search on change\r\n        onChange={(e) => {\r\n          if (!this.props.error){\r\n            this.props.fetchAPI(e.target.value, 1)\r\n          }}\r\n        }  \r\n          />\r\n        <span className=\"icon is-medium is-left\">\r\n          <i className=\"fas fa-search clickableIcon\"></i>\r\n        </span>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.fetch.error,\r\n})\r\nexport default connect(mapStateToProps, { fetchAPI })(InputBox);\r\n\r\n","import React from 'react';\nimport InputBox from './inputBox'\n\nfunction Header() {\n\n  return (\n\n    <nav className=\"navbar is-transparent is-fixed-top headerBg level\">\n    <div className=\"navbar-brand headerBg\">\n      <h1 className=\"navbar-item has-text-white\">\n      US News\n      </h1>\n      \n      \n    </div>\n    <div className=\"navbar-menu is-active headerBg\">\n    <div className=\"navbar-end\">\n      <div className=\"navbar-item\">\n        <InputBox/>\n      </div>\n    </div>\n    </div>\n   \n   </nav>\n   \n\n  );\n}\n\nexport default Header;\n\n/*\n*/","const images = {\r\n    \"The Washington Post\": \"https://user-images.githubusercontent.com/24837709/66290275-62094000-e911-11e9-93bf-952c809e838c.jpg\",\r\n    \"The New York Times\": \"https://user-images.githubusercontent.com/24837709/66290236-443bdb00-e911-11e9-8451-8bccb0a1536b.png\"\r\n}\r\n\r\nexport default images","import React, { Component } from 'react';\r\nimport { offsetDateTime } from './util'\r\nimport { connect } from 'react-redux'\r\nimport images from './images'\r\n\r\nclass Card extends Component {\r\n    render() {\r\n\r\n      let data = this.props.data || []\r\n\r\n      let minWidth = 400;\r\n      if (window.innerWidth < minWidth) minWidth = window.innerWidth\r\n      \r\n      return (\r\n        <div className=\"container columns is-multiline is-marginless is-paddingless is-centered\">\r\n             {data.map((row, i) => (\r\n                <div className='column is-one-third is-flex clickableBox' \r\n                    style={{minWidth:minWidth}} key={`${i}-${row[\"title\"]}`}>\r\n                <div className=\"card\" key={row[\"title\"]} \r\n                    onClick={() => window.open(row[\"url\"])}>\r\n                <div className=\"paddedBox\">\r\n                <article className=\"media is-marginless\">\r\n                    <div className=\"media-left\">\r\n                        <div className=\"circle has-text-centered is-size-4\">{(row[\"source\"][\"name\"][0]).toUpperCase()}</div>\r\n                    </div>\r\n                    <div className=\"media-content\">\r\n                        <div className=\"content\">\r\n                            <strong>{row[\"source\"][\"name\"]}</strong>\r\n                            <br/>\r\n                            <p className=\"is-size-7\">{offsetDateTime(row[\"publishedAt\"])}</p>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n                </div>\r\n                    <div className=\"card-image\">\r\n                    <figure className=\"image\">\r\n                        <img src={(row[\"urlToImage\"] || images[row[\"source\"][\"name\"]])} alt=\"cardimg\"/>\r\n                    </figure>\r\n                    </div>\r\n\r\n                    <div className=\"card-content has-text-left\">\r\n                    <p className=\"title is-5\">{row[\"title\"]}</p>\r\n                    <div className=\"content is-size-7\">\r\n                        {row[\"description\"]}    \r\n\r\n                    <br/>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.fetch.data,\r\n  loading: state.fetch.loading\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Card);","\r\nimport moment from 'moment'\r\n\r\nfunction offsetDateTime(current, offset){\r\n    return (moment(current).add(offset, 'hours').format('YYYY-MM-DD hh:mma'))\r\n}\r\n\r\n\r\nexport {offsetDateTime}\r\n\r\n","import React, { Component } from 'react';\nimport Card from './card'\n\nimport { connect } from 'react-redux'\nimport { fetchAPI } from './actions/fetchActions'\n\n\nclass Body extends Component {\n\n\n  //Run API calls on load\n  componentDidMount(){\n    this.props.fetchAPI();\n\n    const options = {\n      root: document.querySelector(null), /* or `null` for page as root */\n    }\n    let callback = (entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && this.props.loading === false) {\n          this.props.fetchAPI(this.props.search, (this.props.page + 1));\n          //console.log(\"Intersecting\")\n        }\n      });\n    }\n    const observer = new IntersectionObserver(callback, options);\n    const target = document.querySelector('#end');\n    observer.observe(target);\n\n  }\n\n  render(){\n\n  return (  \n      <div className=\"container is-centered body\" id=\"checkBody\">\n        \n        <Card/>\n        <br/>\n\n        {this.props.error === true ? <p className=\"has-text-danger\">Loading unsucessful. Please refresh and try again.</p> : null}\n\n        {this.props.totalResults === 0 ? <p>No results for the search term: <b>{this.props.search}</b></p> : null}\n\n        {(this.props.totalResults > 0 && this.props.totalResults <= this.props.page*10) ? \n        <p>You have reached the end of search results for search term: <b>{this.props.search}</b></p> : null}\n\n        {this.props.loading === true && this.props.error === false ?\n           <i className=\"fas fa-sync fa-spin has-text-black is-size-1\"></i> : null}\n        <div id=\"end\"><br/></div>\n        <br/>\n      </div>\n  \n  );\n}\n}\n\nconst mapStateToProps = state => ({\n  search: state.fetch.search,\n  data: state.fetch.data,\n  page: state.fetch.page,\n  loading: state.fetch.loading,\n  error: state.fetch.error,\n  totalResults: state.fetch.totalResults\n})\n\nexport default connect(mapStateToProps, { fetchAPI })(Body);\n","import React from 'react';\nimport './App.scss';\nimport 'bulma'\n\nimport Header from './Header.js'\nimport Body from './Body.js'\n\nimport { Provider } from 'react-redux'\n\nimport {store} from './store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    \n    <div className=\"App\">\n      <Header/>\n      <Body/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}