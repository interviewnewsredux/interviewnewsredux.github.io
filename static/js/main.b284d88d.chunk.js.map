{"version":3,"sources":["Constant.js","actions/fetchActions.js","actions/types.js","inputBox.js","Header.js","card.js","util.js","Body.js","reducers/fetchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","page_size","domain","backupImg","fetchAPI","search","page","dispatch","type","loading","payload","fetch","constant","then","response","json","data","status","InputBox","className","placeholder","id","onKeyPress","e","key","props","target","value","onChange","Component","connect","Header","data-target","Card","Object","keys","this","length","map","row","i","style","minWidth","onClick","window","open","toUpperCase","current","moment","add","offset","format","src","alt","state","Body","onscroll","debounce","innerHeight","document","documentElement","scrollTop","offsetHeight","flex","error","totalResults","initialState","combineReducers","action","articles","concat","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b284d88d.chunk.js","sourcesContent":["\r\nconst APIKey = 'b5e5c8f361424ccab40c738aef523780'\r\nconst page_size = 10\r\nconst domain = `washingtonpost.com,nytimes.com`\r\nconst backupImg = {\r\n    \"The Washington Post\": \"https://www.washingtonpost.com/resizer/2CjPNwqvXHPS_2RpuRTKY-p3eVo=/1484x0/www.washingtonpost.com/pb/resources/img/twp-social-share.png\",\r\n    \"The New York Times\": \"https://static01.nyt.com/newsgraphics/images/icons/defaultPromoCrop.png\"\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    APIKey: APIKey,\r\n    page_size: page_size,\r\n    domain: domain,\r\n    backupImg: backupImg\r\n}"," \r\nimport constant from '../Constant'\r\nimport { LOADING_API, NEW_FETCH_API, FETCH_API_PAGINATION, API_ERROR, CLEAR_DATA } from './types'\r\n\r\nexport const fetchAPI = (search = '', page = 1 ) => dispatch =>{\r\n\r\n    if (page === 1){\r\n        dispatch({\r\n            type: CLEAR_DATA,\r\n            loading: true,\r\n            payload: {},\r\n            page: page\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: LOADING_API,\r\n            loading: true,\r\n            page: page\r\n        })\r\n    }\r\n\r\n    fetch(`https://newsapi.org/v2/everything?`+\r\n            `domains=${constant.domain}` +\r\n            `&apiKey=${constant.APIKey}` +\r\n            `&pageSize=${constant.page_size}` +\r\n            `&page=${page}` +\r\n            `&q=${search}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n\r\n        if (data.status === \"error\"){\r\n            dispatch({\r\n                type: API_ERROR,\r\n                payload: data,\r\n                search: search,\r\n                page: page,\r\n                loading: false\r\n            })\r\n\r\n        } else if (page === 1){\r\n            dispatch({\r\n                type: NEW_FETCH_API,\r\n                payload: data,\r\n                search: search,\r\n                page: page,\r\n                loading: false\r\n            })\r\n        } else { \r\n            dispatch({\r\n                type: FETCH_API_PAGINATION,\r\n                payload: data,\r\n                search: search,\r\n                page: page,\r\n                loading: false\r\n            })\r\n        }\r\n    }) \r\n}\r\n","export const FETCH_API = 'FETCH_API'\r\nexport const LOADING_API = 'LOADING_API'\r\nexport const API_ERROR = 'API_ERROR'\r\nexport const FETCH_API_PAGINATION = 'FETCH_API_PAGINATION'\r\nexport const NEW_FETCH_API = 'NEW_FETCH_API'\r\nexport const CLEAR_DATA = 'CLEAR_DATA'\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { fetchAPI } from './actions/fetchActions'\r\n\r\nclass InputBox extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"control has-icons-left has-icons-right\">\r\n        <input className=\"input is-fullwidth\" type=\"text\" placeholder=\"Search\" id=\"searchBox\"\r\n        onKeyPress={(e) => {\r\n\r\n          //Search on enter press\r\n          if (e.key === \"Enter\"){\r\n            this.props.fetchAPI(e.target.value, 1)\r\n          }}}\r\n        \r\n        //Search on change\r\n        onChange={(e) => this.props.fetchAPI(e.target.value, 1)}  \r\n          />\r\n        <span className=\"icon is-medium is-left\">\r\n          <i className=\"fas fa-search clickableIcon\"></i>\r\n        </span>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\n \r\nexport default connect(null, { fetchAPI })(InputBox);\r\n\r\n","import React from 'react';\n\nimport './App.scss';\nimport InputBox from './inputBox'\n\nfunction Header() {\n\n  return (\n\n    <nav className=\"navbar is-transparent is-fixed-top headerBg\">\n  <div className=\"navbar-brand\">\n    <p className=\"navbar-item has-text-white\">\n     US News\n    </p>\n    <div className=\"navbar-burger burger\" data-target=\"navbarExampleTransparentExample\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  </div>\n\n  <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n    \n    <div className=\"navbar-end\">\n      <div className=\"navbar-item\">\n      <InputBox/>\n      \n      </div>\n    </div>\n  </div>\n</nav>\n\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\r\nimport constant from './Constant.js'\r\nimport { offsetDateTime } from './util'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Card extends Component {\r\n    render() {\r\n\r\n      if (Object.keys(this.props.data).length === 0) return (null)\r\n      let data = this.props.data\r\n\r\n      return (\r\n        <div className=\"container columns is-multiline is-marginless is-paddingless\">\r\n             {data.map((row, i) => (\r\n                <div className='column is-one-third is-flex clickableBox is-centered' \r\n                    style={{minWidth:400}} key={`${i}-${row[\"title\"]}`}>\r\n                <div className=\"card\" key={row[\"title\"]} \r\n                    onClick={() => window.open(row[\"url\"])}>\r\n                <div className=\"paddedBox\">\r\n                <article className=\"media is-marginless\">\r\n                    <div className=\"media-left\">\r\n                        <div className=\"circle has-text-centered is-size-4\">{(row[\"source\"][\"name\"][0]).toUpperCase()}</div>\r\n                    </div>\r\n                    <div className=\"media-content\">\r\n                        <div className=\"content\">\r\n                            <strong>{row[\"source\"][\"name\"]}</strong>\r\n                            <br/>\r\n                            <p className=\"is-size-7\">{offsetDateTime(row[\"publishedAt\"])}</p>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n                </div>\r\n                    <div className=\"card-image\">\r\n                    <figure className=\"image\">\r\n                        <img src={(row[\"urlToImage\"] === \"\" || row[\"urlToImage\"] === null) ? \r\n                            constant.backupImg[row[\"source\"][\"name\"]] : row[\"urlToImage\"]} alt=\"cardimg\"/>\r\n                    </figure>\r\n                    </div>\r\n\r\n                    <div className=\"card-content has-text-left\">\r\n                    <p className=\"title is-5\">{row[\"title\"]}</p>\r\n                    <div className=\"content is-size-7\">\r\n                        {row[\"description\"]}    \r\n                    <br/>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.fetch.data,\r\n  loading: state.fetch.loading\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Card);","\r\nimport moment from 'moment'\r\n\r\nexport function offsetDateTime(current, offset){\r\n    return (moment(current).add(offset, 'hours').format('YYYY-MM-DD hh:mma'))\r\n}\r\n","import React, { Component } from 'react';\nimport debounce from \"lodash.debounce\";\n\nimport './App.scss';\nimport Card from './card'\n\nimport { connect } from 'react-redux'\nimport { fetchAPI } from './actions/fetchActions'\n\nclass Body extends Component {\n\n  //Run API calls on load\n  componentDidMount(){\n\n    this.props.fetchAPI();\n\n    //Runs API call when scrolled to bottom of page\n    window.onscroll = debounce(() => {\n      if (this.props.loading) return;\n\n      if (\n        (window.innerHeight + document.documentElement.scrollTop + 100)\n        >= document.documentElement.offsetHeight\n      ) {\n        this.props.fetchAPI(this.props.search, (this.props.page + 1));\n      }\n    }, 100);\n  }\n\n  render(){\n  return (\n    <section className=\"section\">\n      \n      <div className=\"container is-centered\" style={{flex: 1}}>\n        <Card/>\n        <br/>\n        {this.props.error === true ? <p className=\"has-text-danger\">Error loading more articles. Please refresh and try again.</p> : null}\n\n        {this.props.totalResults === 0 ? <p>No results for the search term: <b>{this.props.search}</b></p> : null}\n\n        {(this.props.totalResults > 0 && this.props.totalResults <= this.props.page*10) ? \n        <p>You have reached the end of search results for search term: <b>{this.props.search}</b></p> : null}\n\n        {this.props.loading === true && this.props.error === false ?\n           <i className=\"fas fa-sync fa-spin has-text-black is-size-1\"></i> : null}\n        <br/>\n      </div>\n    </section>\n  );\n}\n}\n\nconst mapStateToProps = state => ({\n  search: state.fetch.search,\n  page: state.fetch.page,\n  loading: state.fetch.loading,\n  error: state.fetch.error,\n  totalResults: state.fetch.totalResults\n})\n\nexport default connect(mapStateToProps, { fetchAPI })(Body);\n","import { FETCH_API_PAGINATION, NEW_FETCH_API, API_ERROR, CLEAR_DATA, LOADING_API } from '../actions/types'\r\n\r\nconst initialState = {\r\n    data: [],\r\n    loading: true,\r\n    page: 1,\r\n    search: '',\r\n    error: false,\r\n    totalResults: 9999\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    \r\n    switch(action.type){\r\n\r\n        //When performing search, clear articles, reset page to non-scrolled position.\r\n        case CLEAR_DATA:\r\n            return{\r\n                ...state,\r\n                data: [],\r\n                loading: true,\r\n                page: action.page,\r\n                search: action.search,\r\n                error: false,\r\n            }\r\n\r\n        case NEW_FETCH_API:\r\n            return{\r\n                ...state,\r\n                data: action.payload.articles,\r\n                loading: false,\r\n                page: action.page,\r\n                search: action.search,\r\n                error: false,\r\n                totalResults: action.payload.totalResults\r\n            }\r\n\r\n        //For pagination, concat existing articles with new ones\r\n        case FETCH_API_PAGINATION:\r\n            return{\r\n                ...state,\r\n                data: (state.data).concat(action.payload.articles),\r\n                loading: false,\r\n                page: action.page,\r\n                search: action.search,\r\n                error: false,\r\n                totalResults: action.payload.totalResults\r\n            }\r\n\r\n        case LOADING_API:\r\n        return{\r\n            ...state,\r\n            loading: true\r\n        }\r\n\r\n        case API_ERROR:\r\n            return{\r\n                ...state,\r\n                error: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport fetchReducer from './fetchReducer'\r\n\r\nexport default combineReducers({\r\n    fetch: fetchReducer,\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default store;","import React from 'react';\n\nimport './App.scss';\nimport Header from './Header.js'\nimport Body from './Body.js'\n\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Header/>\n      <Body/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}